stages:
  - docker
  - cache
  - test
  - deploy

variables:
  CONTAINER_REGISTRY: registry.gitlab.com
  CONTAINER_IMAGE: $CONTAINER_REGISTRY/taig-github/babel
  DOCKER_DRIVER: overlay2
  SBT: sbt -v -sbt-launch-dir ./cache/launchers -Dsbt.global.base=./cache/sbt -Dsbt.boot.directory=./cache/boot -Dsbt.ivy.home=./cache/ivy -Dsbt.coursier.home=./cache/coursier -Dmode=strict

cache: &cache
  key: global
  paths:
    - ./cache/
    - ./**/target/
  policy: pull

docker:
  stage: docker
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:latest
  cache: {}

dependencies:
  stage: cache
  image: $IMAGE:latest
  script: $SBT test:compile
  cache:
    <<: *cache
    policy: pull-push

formatting:
  stage: test
  image: $CONTAINER_IMAGE:latest
  script:
    - sbt scalafmtCheckAll

unit tests:
  stage: test
  image: $CONTAINER_IMAGE:latest
  script:
    - sbt test

artifacts:
  stage: deploy
  image: $CONTAINER_IMAGE:latest
  only:
    - master
    - tags
  script:
    - sbt publishAndRelease